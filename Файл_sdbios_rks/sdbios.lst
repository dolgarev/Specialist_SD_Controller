0001   0000             ; SD BIOS для компьютера Специалист
0002   0000             ; (c) 22-05-2013 vinxru
0003   0000             
0004   8C0F                  .org 08F00h-753 ; Последний байт кода должен быть 08EFFh
0005   8C0F                                    
0006   8C0F             ;----------------------------------------------------------------------------
0007   8C0F             
0008   8C0F             CLC_PORT        = 0F001h
0009   8C0F             DATA_PORT       = 0F002h
0010   8C0F             CTL_PORT        = 0F003h
0011   8C0F             CLC_BIT         = 80h
0012   8C0F             SEND_MODE       = 10010000b ; Настройка: 1 0 0 A СH 0 B CL   1=ввод 0=вывод
0013   8C0F             RECV_MODE       = 10011001b
0014   8C0F             
0015   8C0F             ERR_START   	= 040h
0016   8C0F             ERR_WAIT    	= 041h
0017   8C0F             ERR_OK_NEXT 	= 042h
0018   8C0F             ERR_OK        = 043h
0019   8C0F             ERR_OK_READ   = 044h
0020   8C0F             ERR_OK_ENTRY  = 045h
0021   8C0F             ERR_OK_WRITE	= 046h
0022   8C0F             ERR_OK_RKS  	= 047h
0023   8C0F             
0024   8C0F             VER_BUF = 0
0025   8C0F             
0026   8C0F             ;----------------------------------------------------------------------------
0027   8C0F             ; Заголовок RKS файла
0028   8C0F             
0029   8C0F 13 8C            .dw $+4
0030   8C11 FF 8E            .dw End-1
0031   8C13                  
0032   8C13             ;----------------------------------------------------------------------------
0033   8C13             	      
0034   8C13             Entry:
0035   8C13                  ; Желтый цвет
0036   8C13 3E 80            MVI	A, 80h
0037   8C15 32 FE FF         STA	0FFFEh
0038   8C18             
0039   8C18                  ; Рисуем изображение
0040   8C18 21 75 8C         LXI	H, Img
0041   8C1B 11 1C BE         LXI	D, 0BE1Ch
0042   8C1E             DrawImg2:
0043   8C1E 4E               MOV	C, M
0044   8C1F 0D               DCR	C
0045   8C20 CA 2F 8C         JZ 	DrawImg4
0046   8C23 23               INX	H
0047   8C24 7E               MOV	A, M
0048   8C25 23               INX	H
0049   8C26             DrawImg3:
0050   8C26 12               STAX	D
0051   8C27 1B               DCX	D
0052   8C28 0D               DCR	C
0053   8C29 C2 26 8C         JNZ	DrawImg3
0054   8C2C C3 1E 8C         JMP	DrawImg2
0055   8C2F             DrawImg4:
0056   8C2F                 
0057   8C2F                  ; Белый цвет
0058   8C2F AF               XRA	A
0059   8C30 32 FE FF         STA	0FFFEh
0060   8C33             
0061   8C33                  ; Вывод названия контроллера на экран
0062   8C33 21 A0 8C         LXI	H, aHello
0063   8C36 CD 18 C8         CALL	0C818h
0064   8C39             
0065   8C39                  ; Вывод версии контроллера
0066   8C39 CD 5A 8C         CALL	PrintVer
0067   8C3C             
0068   8C3C                  ; Перевод строки
0069   8C3C 21 BE 8C         lxi	h, aCrLf
0070   8C3F CD 18 C8         CALL	0C818h
0071   8C42             
0072   8C42                  ; Запускаем файл SHELL.RKS без ком строки
0073   8C42 21 D0 8C         LXI	H, aShellRks
0074   8C45 11 FE 8C         LXI	D, aEmpty
0075   8C48 CD E9 8D         CALL	CmdExec
0076   8C4B F5               PUSH	PSW
0077   8C4C             
0078   8C4C                  ; Ошибка - файл не найден
0079   8C4C FE 04            CPI	04h
0080   8C4E C2 0E 8D         JNZ 	Error2
0081   8C51             
0082   8C51                  ; Вывод сообщения "ФАЙЛ НЕ НАЙДЕН BOOT/SHELL.RKS"
0083   8C51 21 C1 8C         LXI	H, aErrorShellRks
0084   8C54 CD 18 C8         CALL	0C818h
0085   8C57 C3 57 8C         JMP	$
0086   8C5A             
0087   8C5A             ;----------------------------------------------------------------------------
0088   8C5A             
0089   8C5A             PrintVer:
0090   8C5A                  ; Команда получения версии
0091   8C5A 3E 01            MVI	A, 1
0092   8C5C CD 2A 8E         CALL	StartCommand	; Лишний такт в котором пропустим версию
0093   8C5F CD 99 8E         CALL	SwitchRecv
0094   8C62                  
0095   8C62                  ; Получаем версию набора команд и текст
0096   8C62 01 00 00         LXI	B, VER_BUF
0097   8C65 11 12 00         LXI	D, 18          ; 1 ый байт версия, последний байт - отпускаем шину
0098   8C68 CD AB 8E         CALL	RecvBlock
0099   8C6B                       
0100   8C6B                  ; Вывод версии железа
0101   8C6B AF               XRA	A
0102   8C6C 32 11 00         STA	VER_BUF+17
0103   8C6F 21 01 00         LXI	H, VER_BUF+1
0104   8C72 C3 18 C8         JMP 	0C818h
0105   8C75             
0106   8C75             ;----------------------------------------------------------------------------
0107   8C75             
0108   8C75 08 FF 02 1F Img:            .db 8, 0FFh, 2, 01Fh, 4, 06Fh, 2, 01Fh, 7, 0FFh, 5, 055h, 2, 0FFh, 234, 0
0108   8C79 04 6F 02 1F 
0108   8C7D 07 FF 05 55 
0108   8C81 02 FF EA 00 
0109   8C85 08 FF 02 E3                 .db 8, 0FFh, 2, 0E3h, 2, 0FDh, 2, 0F3h, 2, 0EFh, 2, 0F1h, 5, 0FFh, 3, 07Fh, 3, 055h, 3, 0D5h, 2, 07Fh, 234, 0
0109   8C89 02 FD 02 F3 
0109   8C8D 02 EF 02 F1 
0109   8C91 05 FF 03 7F 
0109   8C95 03 55 03 D5 
0109   8C99 02 7F EA 00 
0110   8C9D 16 01                       .db 22, 1
0111   8C9F 01                          .db 1
0112   8CA0             
0113   8CA0 0D 53 44 20 aHello:         .db 13,"SD BIOS V1.0",13,10
0113   8CA4 42 49 4F 53 
0113   8CA8 20 56 31 2E 
0113   8CAC 30 0D 0A 
0114   8CAF 53 44 20 43 aSdController:  .db "SD CONTROLLER ",0
0114   8CB3 4F 4E 54 52 
0114   8CB7 4F 4C 4C 45 
0114   8CBB 52 20 00 
0115   8CBE 0D 0A 00    aCrLf:          .db 13,10,0
0116   8CC1 66 61 6A 6C aErrorShellRks: .db "fajl ne najden "
0116   8CC5 20 6E 65 20 
0116   8CC9 6E 61 6A 64 
0116   8CCD 65 6E 20 
0117   8CD0 42 4F 4F 54 aShellRks:      .db "BOOT/SHELL.RKS",0
0117   8CD4 2F 53 48 45 
0117   8CD8 4C 4C 2E 52 
0117   8CDC 4B 53 00 
0118   8CDF 28 63 29 20                 .db "(c) 22-05-2013 vinxru"
0118   8CE3 32 32 2D 30 
0118   8CE7 35 2D 32 30 
0118   8CEB 31 33 20 76 
0118   8CEF 69 6E 78 72 
0118   8CF3 75 
0119   8CF4             
0120   8CF4             ; Код ниже будет затерт ком строкой и собственым именем
0121   8CF4             
0122   8CF4             SELF_NAME    = $-512 ; путь (буфер 256 байт)
0123   8CF4             CMD_LINE     = $-256 ; команданая строка 256 байт
0124   8CF4             
0125   8CF4             ;----------------------------------------------------------------------------
0126   8CF4             ; РЕЗИДЕНТНАЯ ЧАСТЬ SD BIOS
0127   8CF4             ;----------------------------------------------------------------------------
0128   8CF4             
0129   8CF4 6F 7B 69 62 aError:    .db "o{ibka SD "
0129   8CF8 6B 61 20 53 
0129   8CFC 44 20 
0130   8CFE 00          aEmpty:    .db 0
0131   8CFF             
0132   8CFF             ;----------------------------------------------------------------------------
0133   8CFF             ; Тут восстанавливается то, что можно быть испорчено при сбое
0134   8CFF             
0135   8CFF             Error:     
0136   8CFF                  ; Схема начального запуска
0137   8CFF FB               EI
0138   8D00 21 03 FF         LXI	H, 0FF03h
0139   8D03 36 82            MVI	M, 82h
0140   8D05                  
0141   8D05                  ; Инициализация стека
0142   8D05 31 FF 7F         LXI	SP, 07FFFh
0143   8D08             
0144   8D08                  ; Сохраняем код ошибки
0145   8D08 F5               PUSH	PSW
0146   8D09             
0147   8D09                  ; Очистка экрана
0148   8D09 0E 1F            MVI	C, 1Fh
0149   8D0B CD 09 C8         CALL	0C809h
0150   8D0E                  
0151   8D0E             Error2:
0152   8D0E                  ; Вывод текста "ОШИБКА SD "
0153   8D0E 21 F4 8C         LXI	H, aError
0154   8D11 CD 18 C8         CALL	0C818h
0155   8D14             
0156   8D14                  ; Вывод кода ошибки
0157   8D14 F1               POP	PSW
0158   8D15 CD 15 C8         CALL	0C815h
0159   8D18             
0160   8D18                  ; Виснем
0161   8D18 C3 18 8D         JMP	$
0162   8D1B             
0163   8D1B             ;----------------------------------------------------------------------------
0164   8D1B             
0165   8D1B             BiosEntry:
0166   8D1B E5               PUSH H             ; 1
0167   8D1C 21 24 8D         LXI	H, JmpTbl     ; 2
0168   8D1F 85               ADD	L             ; 1
0169   8D20 6F               MOV	L, A          ; 1
0170   8D21 6E               MOV	L, M          ; 1
0171   8D22 E3               XTHL               ; 1
0172   8D23 C9               RET                ; 1
0173   8D24             
0174   8D24             ;----------------------------------------------------------------------------
0175   8D24             ; Страница 8D00. Все переходы JmpTbl в пределах одной страницы
0176   8D24             
0177   8D24             JmpTbl:
0178   8D24 E9               .db CmdExec           ; 0 HL-имя файла, DE-командная строка  / A-код ошибки
0179   8D25 2B               .db CmdFind           ; 1 HL-имя файла, DE-максимум файлов для загрузки, BC-адрес / HL-сколько загрузили, A-код ошибки
0180   8D26 54               .db CmdOpenDelete     ; 2 D-режим, HL-имя файла / A-код ошибки
0181   8D27 6B               .db CmdSeekGetSize    ; 3 B-режим, DE:HL-позиция / A-код ошибки, DE:HL-позиция
0182   8D28 8D               .db CmdRead           ; 4 HL-размер, DE-адрес / HL-сколько загрузили, A-код ошибки
0183   8D29 9D               .db CmdWrite          ; 5 HL-размер, DE-адрес / A-код ошибки
0184   8D2A C7               .db CmdMove           ; 6 HL-из, DE-в / A-код ошибки
0185   8D2B             
0186   8D2B             ;----------------------------------------------------------------------------
0187   8D2B             ; HL-путь, DE-максимум файлов для загрузки, BC-адрес / HL-сколько загрузили, A-код ошибки
0188   8D2B             
0189   8D2B             CmdFind:
0190   8D2B                  ; Код команды
0191   8D2B 3E 03            MVI	A, 3
0192   8D2D CD 2A 8E         CALL	StartCommand
0193   8D30             
0194   8D30                  ; Путь
0195   8D30 CD 8D 8E         CALL	SendString
0196   8D33             
0197   8D33                  ; Максимум файлов
0198   8D33 EB               XCHG
0199   8D34 CD 85 8E         CALL	SendWord
0200   8D37             
0201   8D37                  ; Переключаемся в режим приема
0202   8D37 CD 99 8E         CALL	SwitchRecv
0203   8D3A             
0204   8D3A                  ; Счетчик
0205   8D3A 21 00 00         LXI	H, 0
0206   8D3D             
0207   8D3D             CmdFindLoop:
0208   8D3D                  ; Ждем пока МК прочитает
0209   8D3D CD A2 8E         CALL	WaitForReady
0210   8D40 FE 43            CPI	ERR_OK
0211   8D42 CA 75 8E         JZ		Ret0
0212   8D45 FE 45            CPI	ERR_OK_ENTRY
0213   8D47 C2 76 8E         JNZ	EndCommand
0214   8D4A             
0215   8D4A                  ; Прием блока данных
0216   8D4A 11 14 00         LXI	D, 20	; Длина блока
0217   8D4D CD AB 8E         CALL	RecvBlock
0218   8D50             
0219   8D50                  ; Увеличиваем счетчик файлов
0220   8D50 23               INX	H
0221   8D51             
0222   8D51                  ; Цикл
0223   8D51 C3 3D 8D         JMP	CmdFindLoop
0224   8D54             
0225   8D54             ;----------------------------------------------------------------------------
0226   8D54             ; D-режим, HL-имя файла / A-код ошибки
0227   8D54             
0228   8D54             CmdOpenDelete: 
0229   8D54                  ; Код команды
0230   8D54 3E 04            MVI	A, 4
0231   8D56 CD 2A 8E         CALL	StartCommand
0232   8D59             
0233   8D59                  ; Режим
0234   8D59 7A               MOV	A, D
0235   8D5A CD F0 8E         CALL	Send
0236   8D5D             
0237   8D5D                  ; Имя файла
0238   8D5D CD 8D 8E         CALL	SendString
0239   8D60             
0240   8D60                  ; Ждем пока МК сообразит
0241   8D60 CD 9F 8E         CALL	SwitchRecvAndWait
0242   8D63 FE 43            CPI	ERR_OK
0243   8D65 CA 75 8E         JZ		Ret0
0244   8D68 C3 76 8E         JMP	EndCommand
0245   8D6B                  
0246   8D6B             ;----------------------------------------------------------------------------
0247   8D6B             ; B-режим, DE:HL-позиция / A-код ошибки, DE:HL-позиция
0248   8D6B             
0249   8D6B             CmdSeekGetSize:
0250   8D6B                  ; Код команды
0251   8D6B 3E 05            MVI 	A, 5
0252   8D6D CD 2A 8E         CALL	StartCommand
0253   8D70             
0254   8D70                  ; Режим     
0255   8D70 78               MOV	A, B
0256   8D71 CD F0 8E         CALL	Send
0257   8D74             
0258   8D74                  ; Позиция     
0259   8D74 CD 85 8E         CALL	SendWord
0260   8D77 EB               XCHG
0261   8D78 CD 85 8E         CALL	SendWord
0262   8D7B             
0263   8D7B                  ; Ждем пока МК сообразит. МК должен ответить кодом ERR_OK
0264   8D7B CD 9F 8E         CALL	SwitchRecvAndWait
0265   8D7E FE 43            CPI	ERR_OK
0266   8D80 C2 76 8E         JNZ	EndCommand
0267   8D83             
0268   8D83                  ; Длина файла
0269   8D83 CD 7C 8E         CALL	RecvWord
0270   8D86 EB               XCHG
0271   8D87 CD 7C 8E         CALL	RecvWord
0272   8D8A             
0273   8D8A                  ; Результат
0274   8D8A C3 75 8E         JMP	Ret0
0275   8D8D                  
0276   8D8D             ;----------------------------------------------------------------------------
0277   8D8D             ; HL-размер, DE-адрес / HL-сколько загрузили, A-код ошибки
0278   8D8D             
0279   8D8D             CmdRead:
0280   8D8D                  ; Код команды
0281   8D8D 3E 06            MVI	A, 6
0282   8D8F CD 2A 8E         CALL	StartCommand
0283   8D92             
0284   8D92                  ; Адрес в BC
0285   8D92 42               MOV	B, D
0286   8D93 4B               MOV	C, E
0287   8D94             
0288   8D94                  ; Размер блока
0289   8D94 CD 85 8E         CALL	SendWord        ; HL-размер
0290   8D97             
0291   8D97                  ; Переключаемся в режим приема
0292   8D97 CD 99 8E         CALL	SwitchRecv
0293   8D9A             
0294   8D9A                  ; Прием блока. На входе адрес BC, принятая длина в HL
0295   8D9A C3 C8 8E         JMP	RecvBuf
0296   8D9D             
0297   8D9D             ;----------------------------------------------------------------------------
0298   8D9D             ; HL-размер, DE-адрес / A-код ошибки
0299   8D9D             
0300   8D9D             CmdWrite:
0301   8D9D                  ; Код команды
0302   8D9D 3E 07            MVI	A, 7
0303   8D9F CD 2A 8E         CALL	StartCommand
0304   8DA2                  
0305   8DA2                  ; Размер блока
0306   8DA2 CD 85 8E         CALL	SendWord        ; HL-размер
0307   8DA5             
0308   8DA5                  ; Теперь адрес в HL
0309   8DA5 EB               XCHG
0310   8DA6             
0311   8DA6             CmdWriteFile2:
0312   8DA6                  ; Результат выполнения команды
0313   8DA6 CD 9F 8E         CALL	SwitchRecvAndWait
0314   8DA9 FE 43            CPI  	ERR_OK
0315   8DAB CA 75 8E         JZ  	Ret0
0316   8DAE FE 46            CPI  	ERR_OK_WRITE
0317   8DB0 C2 76 8E         JNZ	EndCommand
0318   8DB3             
0319   8DB3                  ; Размер блока, который может принять МК в DE
0320   8DB3 CD 7C 8E         CALL	RecvWord
0321   8DB6             
0322   8DB6                  ; Переключаемся в режим передачи    
0323   8DB6 CD 6C 8E         CALL	SwitchSend
0324   8DB9             
0325   8DB9                  ; Передача блока. Адрес BC длина DE. (Можно оптимизировать цикл)
0326   8DB9             CmdWriteFile1:
0327   8DB9 7E               MOV	A, M
0328   8DBA 23               INX	H
0329   8DBB CD F0 8E         CALL	Send
0330   8DBE 1B               DCX	D
0331   8DBF 7A               MOV	A, D
0332   8DC0 B3               ORA	E
0333   8DC1 C2 B9 8D         JNZ 	CmdWriteFile1
0334   8DC4             
0335   8DC4 C3 A6 8D         JMP	CmdWriteFile2
0336   8DC7             
0337   8DC7             ;----------------------------------------------------------------------------
0338   8DC7             ; HL-из, DE-в / A-код ошибки
0339   8DC7             
0340   8DC7             CmdMove:     
0341   8DC7                  ; Код команды
0342   8DC7 3E 08            MVI	A, 8
0343   8DC9 CD 2A 8E         CALL	StartCommand
0344   8DCC             
0345   8DCC                  ; Имя файла
0346   8DCC CD 8D 8E         CALL	SendString
0347   8DCF             
0348   8DCF                  ; Ждем пока МК сообразит
0349   8DCF CD 9F 8E         CALL	SwitchRecvAndWait
0350   8DD2 FE 46            CPI	ERR_OK_WRITE
0351   8DD4 C2 76 8E         JNZ	EndCommand
0352   8DD7             
0353   8DD7                  ; Переключаемся в режим передачи
0354   8DD7 CD 6C 8E         CALL	SwitchSend
0355   8DDA             
0356   8DDA                  ; Имя файла
0357   8DDA EB               XCHG
0358   8DDB CD 8D 8E         CALL	SendString
0359   8DDE             
0360   8DDE             WaitEnd:
0361   8DDE                  ; Ждем пока МК сообразит
0362   8DDE CD 9F 8E         CALL	SwitchRecvAndWait
0363   8DE1 FE 43            CPI	ERR_OK
0364   8DE3 CA 75 8E         JZ		Ret0
0365   8DE6 C3 76 8E         JMP	EndCommand
0366   8DE9             
0367   8DE9             ;----------------------------------------------------------------------------
0368   8DE9             ; HL-имя файла, DE-командная строка / A-код ошибки
0369   8DE9             
0370   8DE9             CmdExec:
0371   8DE9                  ; Код команды
0372   8DE9 3E 02            MVI	A, 2
0373   8DEB CD 2A 8E         CALL	StartCommand
0374   8DEE             
0375   8DEE                  ; Имя файла
0376   8DEE E5               PUSH	H
0377   8DEF CD 8D 8E         CALL	SendString
0378   8DF2 E1               POP	H
0379   8DF3             
0380   8DF3                  ; Ждем пока МК прочитает файл
0381   8DF3                  ; МК должен ответить кодом ERR_OK_RKS
0382   8DF3 CD 9F 8E         CALL	SwitchRecvAndWait
0383   8DF6 FE 47            CPI	ERR_OK_RKS
0384   8DF8 C2 76 8E         JNZ	EndCommand
0385   8DFB             
0386   8DFB                  ; Сохраняем имя файла (HL-строка)
0387   8DFB D5               PUSH	D
0388   8DFC EB               XCHG
0389   8DFD 21 F4 8A         LXI	H, SELF_NAME
0390   8E00 CD E1 8E         CALL	strcpy255
0391   8E03 D1               POP	D
0392   8E04             
0393   8E04                  ; Сохраняем командную строку (DE-строка)
0394   8E04 21 F4 8B         LXI	H, CMD_LINE
0395   8E07 CD E1 8E         CALL	strcpy255
0396   8E0A             
0397   8E0A                  ; *** Это точка невозврата. Любая ошибка приведет к перезагрузке. ***
0398   8E0A             
0399   8E0A                  ; Инициализация стека (аналогично стандартному монитору
0400   8E0A 31 FF 7F         LXI	SP, 07FFFh
0401   8E0D             
0402   8E0D                  ; Принимаем адрес загрузки в BC и сохраняем его в стек
0403   8E0D CD 7C 8E         CALL	RecvWord
0404   8E10 D5               PUSH	D
0405   8E11 42               MOV 	B, D
0406   8E12 4B               MOV 	C, E
0407   8E13             
0408   8E13                  ; Загружаем файл
0409   8E13 CD C8 8E         CALL	RecvBuf
0410   8E16 C2 FF 8C         JNZ 	Error
0411   8E19             
0412   8E19                  ; Очистка экрана
0413   8E19 0E 1F            MVI	C, 1Fh
0414   8E1B CD 09 C8         CALL	0C809h
0415   8E1E             
0416   8E1E                  ; Настройки для программы
0417   8E1E 3E 01            MVI  A, 1		; Версия контроллера
0418   8E20 01 1B 8D         LXI  B, BiosEntry  ; Точка входа SD BIOS
0419   8E23 11 F4 8A         LXI  D, SELF_NAME  ; Собственное имя
0420   8E26 21 F4 8B         LXI  H, CMD_LINE   ; Командная строка
0421   8E29             
0422   8E29                  ; Запуск загруженной программы
0423   8E29 C9               RET
0424   8E2A             
0425   8E2A             ;----------------------------------------------------------------------------
0426   8E2A             ; Это была последняя команда. Дальше страница 8E00.
0427   8E2A             ;----------------------------------------------------------------------------
0428   8E2A             
0429   8E2A             ;----------------------------------------------------------------------------
0430   8E2A             ; Начало любой команды. 
0431   8E2A             ; B - код команды
0432   8E2A             
0433   8E2A             StartCommand:
0434   8E2A                  ; Первым этапом происходит синхронизация с контроллером
0435   8E2A                  ; Принимается 256 попыток, в каждой из которых пропускается 256+ байт
0436   8E2A                  ; То есть это максимальное кол-во данных, которое может передать контроллер
0437   8E2A C5               PUSH	B
0438   8E2B 47               MOV	B, A
0439   8E2C 0E 00            MVI	C, 0
0440   8E2E             
0441   8E2E             StartCommand1:
0442   8E2E                  ; Режим передачи
0443   8E2E CD 6F 8E         CALL	SwitchSend0
0444   8E31             
0445   8E31                  ; Передаем начало команды
0446   8E31 3E 13            MVI	A, 013h
0447   8E33 CD F0 8E         CALL	Send
0448   8E36 3E B4            MVI	A, 0B4h
0449   8E38 CD F0 8E         CALL	Send
0450   8E3B 3E 57            MVI	A, 057h
0451   8E3D CD F0 8E         CALL	Send
0452   8E40 78               MOV	A, B
0453   8E41 CD F0 8E         CALL	Send
0454   8E44             
0455   8E44                  ; Режим приема  
0456   8E44 CD 99 8E         CALL	SwitchRecv
0457   8E47             
0458   8E47                  ; Если есть синхронизация, то контроллер ответит ERR_START
0459   8E47 CD F3 8E         CALL	Recv
0460   8E4A FE 40            CPI	ERR_START
0461   8E4C CA 63 8E         JZ		StartCommand2
0462   8E4F             
0463   8E4F                  ; Пауза. И за одно пропускаем 256 байт (в сумме будет 
0464   8E4F                  ; пропущено 64 Кб данных, максимальный размер пакета)
0465   8E4F C5               PUSH	B
0466   8E50 0E 00            MVI	C, 0
0467   8E52             StartCommand3:
0468   8E52 CD F3 8E         CALL	Recv
0469   8E55 0D               DCR	C
0470   8E56 C2 52 8E         JNZ	StartCommand3
0471   8E59 C1               POP	B
0472   8E5A                     
0473   8E5A                  ; Попытки
0474   8E5A 0D               DCR	C
0475   8E5B C2 2E 8E         JNZ	StartCommand1    
0476   8E5E             
0477   8E5E                  ; Код ошибки
0478   8E5E 3E 40            MVI	A, ERR_START
0479   8E60 C1               POP	B ; Прошлое значение B
0480   8E61             
0481   8E61                  ; Выходим через функцию.
0482   8E61             StartCommandErr:
0483   8E61 C1               POP	B ; Адрес возрата
0484   8E62 C9               RET
0485   8E63             
0486   8E63             ;----------------------------------------------------------------------------
0487   8E63             ; Синхронизация с контроллером есть. Контроллер должен ответить ERR_OK_NEXT
0488   8E63             
0489   8E63             StartCommand2:
0490   8E63                  ; Восстанавливаем прошлое значение BC
0491   8E63 C1               POP	B
0492   8E64             
0493   8E64                  ; Ответ         	
0494   8E64 CD A2 8E         CALL	WaitForReady
0495   8E67 FE 42            CPI	ERR_OK_NEXT
0496   8E69 C2 61 8E         JNZ	StartCommandErr
0497   8E6C             
0498   8E6C                  ; Включаем передачу и выходим
0499   8E6C                  ;JMP 	SwitchSend
0500   8E6C             
0501   8E6C             ;----------------------------------------------------------------------------
0502   8E6C             ; Переключиться в режим передачи
0503   8E6C             
0504   8E6C             SwitchSend:
0505   8E6C CD F3 8E         CALL	Recv
0506   8E6F             SwitchSend0:
0507   8E6F 3E 90            MVI	A, SEND_MODE
0508   8E71 32 03 F0         STA	CTL_PORT
0509   8E74 C9               RET
0510   8E75             
0511   8E75             ;----------------------------------------------------------------------------
0512   8E75             ; Успешное окончание команды 
0513   8E75             ; и дополнительный такт, что бы МК отпустил шину
0514   8E75             
0515   8E75             Ret0:
0516   8E75 AF               XRA	A
0517   8E76             
0518   8E76             ;----------------------------------------------------------------------------
0519   8E76             ; Окончание команды с ошибкой в A 
0520   8E76             ; и дополнительный такт, что бы МК отпустил шину
0521   8E76             
0522   8E76             EndCommand:
0523   8E76 F5               PUSH	PSW
0524   8E77 CD F3 8E         CALL	Recv
0525   8E7A F1               POP	PSW
0526   8E7B C9               RET
0527   8E7C             
0528   8E7C             ;----------------------------------------------------------------------------
0529   8E7C             ; Принять слово в DE 
0530   8E7C             ; Портим A.
0531   8E7C             
0532   8E7C             RecvWord:
0533   8E7C CD F3 8E        CALL Recv
0534   8E7F 5F              MOV  E, A
0535   8E80 CD F3 8E        CALL Recv
0536   8E83 57              MOV  D, A
0537   8E84 C9              RET
0538   8E85                 
0539   8E85             ;----------------------------------------------------------------------------
0540   8E85             ; Отправить слово из HL 
0541   8E85             ; Портим A.
0542   8E85             
0543   8E85             SendWord:
0544   8E85 7D              MOV		A, L
0545   8E86 CD F0 8E        CALL	Send
0546   8E89 7C              MOV		A, H
0547   8E8A C3 F0 8E        JMP		Send
0548   8E8D                 
0549   8E8D             ;----------------------------------------------------------------------------
0550   8E8D             ; Отправка строки
0551   8E8D             ; HL - строка
0552   8E8D             ; Портим A.
0553   8E8D             
0554   8E8D             SendString:
0555   8E8D AF               XRA	A
0556   8E8E B6               ORA	M
0557   8E8F CA F0 8E         JZ		Send
0558   8E92 CD F0 8E         CALL	Send
0559   8E95 23               INX	H
0560   8E96 C3 8D 8E         JMP	SendString
0561   8E99                  
0562   8E99             ;----------------------------------------------------------------------------
0563   8E99             ; Переключиться в режим приема
0564   8E99             
0565   8E99             SwitchRecv:
0566   8E99 3E 99            MVI	A, RECV_MODE
0567   8E9B 32 03 F0         STA	CTL_PORT
0568   8E9E C9               RET
0569   8E9F             
0570   8E9F             ;----------------------------------------------------------------------------
0571   8E9F             ; Переключиться в режим передами и ожидание готовности МК.
0572   8E9F             
0573   8E9F             SwitchRecvAndWait:
0574   8E9F CD 99 8E         CALL SwitchRecv
0575   8EA2             
0576   8EA2             ;----------------------------------------------------------------------------
0577   8EA2             ; Ожидание готовности МК.
0578   8EA2             
0579   8EA2             WaitForReady:
0580   8EA2 CD F3 8E         CALL	Recv
0581   8EA5 FE 41            CPI	ERR_WAIT
0582   8EA7 CA A2 8E         JZ		WaitForReady
0583   8EAA C9               RET
0584   8EAB             
0585   8EAB             ;----------------------------------------------------------------------------
0586   8EAB             ; Принять DE байт по адресу BC
0587   8EAB             ; Портим A
0588   8EAB             
0589   8EAB             RecvBlock:
0590   8EAB E5               PUSH	H
0591   8EAC 21 01 F0         LXI 	H, CLC_PORT
0592   8EAF 14               INR 	D
0593   8EB0 AF               XRA 	A
0594   8EB1 B3               ORA 	E
0595   8EB2 CA C2 8E         JZ 	RecvBlock2
0596   8EB5             RecvBlock1:
0597   8EB5 36 80            MVI  M, CLC_BIT  ; 7
0598   8EB7 36 00            MVI  M, 0        ; 7
0599   8EB9 3A 02 F0         LDA	DATA_PORT   ; 13
0600   8EBC 02               STAX	B		        ; 7
0601   8EBD 03               INX	B		        ; 5
0602   8EBE 1D               DCR	E		        ; 5
0603   8EBF C2 B5 8E         JNZ	RecvBlock1	; 10 = 54
0604   8EC2             RecvBlock2:
0605   8EC2 15               DCR	D
0606   8EC3 C2 B5 8E         JNZ	RecvBlock1
0607   8EC6 E1               POP	H
0608   8EC7 C9               RET
0609   8EC8             
0610   8EC8             ;----------------------------------------------------------------------------
0611   8EC8             ; Загрузка данных по адресу BC. 
0612   8EC8             ; На выходе HL сколько загрузили
0613   8EC8             ; Портим A
0614   8EC8             ; Если загружено без ошибок, на выходе Z=1
0615   8EC8             
0616   8EC8             RecvBuf:
0617   8EC8 21 00 00         LXI	H, 0
0618   8ECB             RecvBuf0:   
0619   8ECB                  ; Подождать
0620   8ECB CD A2 8E         CALL	WaitForReady
0621   8ECE FE 44            CPI	ERR_OK_READ
0622   8ED0 CA 75 8E         JZ		Ret0		; на выходе Z (нет ошибки)
0623   8ED3 B7               ORA	A
0624   8ED4 C2 76 8E         JNZ	EndCommand	; на выходе NZ (ошибка)
0625   8ED7             
0626   8ED7                  ; Размер загруженных данных в DE
0627   8ED7 CD 7C 8E         CALL	RecvWord
0628   8EDA             
0629   8EDA                  ; В HL общий размер
0630   8EDA 19               DAD D
0631   8EDB             
0632   8EDB                  ; Принять DE байт по адресу BC
0633   8EDB CD AB 8E         CALL	RecvBlock
0634   8EDE             
0635   8EDE C3 CB 8E         JMP	RecvBuf0
0636   8EE1             
0637   8EE1             ;----------------------------------------------------------------------------
0638   8EE1             ; Скопироваьт строку с ограничением 256 символов (включая терминатор)
0639   8EE1             
0640   8EE1             strcpy255:
0641   8EE1 06 FF            MVI  B, 255
0642   8EE3             strcpy255_1:
0643   8EE3 1A               LDAX D
0644   8EE4 13               INX  D
0645   8EE5 77               MOV  M, A
0646   8EE6 23               INX  H
0647   8EE7 B7               ORA  A
0648   8EE8 C8               RZ
0649   8EE9 05               DCR  B
0650   8EEA C2 E3 8E         JNZ  strcpy255_1
0651   8EED 36 00            MVI  M, 0 ; Терминатор
0652   8EEF C9               RET
0653   8EF0             
0654   8EF0             ;----------------------------------------------------------------------------
0655   8EF0             ; Отправить байт из A.
0656   8EF0             
0657   8EF0             Send:
0658   8EF0 32 02 F0         STA	DATA_PORT     
0659   8EF3             
0660   8EF3             ;----------------------------------------------------------------------------
0661   8EF3             ; Принять байт в А
0662   8EF3             
0663   8EF3             Recv:
0664   8EF3 3E 80            MVI	A, CLC_BIT
0665   8EF5 32 01 F0         STA	CLC_PORT
0666   8EF8 AF               XRA	A
0667   8EF9 32 01 F0         STA	CLC_PORT
0668   8EFC 3A 02 F0         LDA	DATA_PORT
0669   8EFF C9               RET
0670   8F00             
0671   8F00             ;----------------------------------------------------------------------------
0672   8F00             
0673   8F00             End:
0674   8F00 FF FF            .dw 0FFFFh
0675   8F02             
0676   8F02             ;----------------------------------------------------------------------------
0677   8F02             
0678   8F02             .Endtasm: Number of errors = 0
