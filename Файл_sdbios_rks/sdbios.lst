0001   0000             ; SD BIOS для компьютера Специалист
0002   0000             ; (c) 22-05-2013 vinxru
0003   0000             
0004   8C02                  .org 08F00h-766 ; Последний байт кода должен быть 08EFFh
0005   8C02                                    
0006   8C02             ;----------------------------------------------------------------------------
0007   8C02             
0008   8C02             CLC_PORT        = 0F001h
0009   8C02             DATA_PORT       = 0F002h
0010   8C02             CTL_PORT        = 0F003h
0011   8C02             CLC_BIT         = 80h
0012   8C02             SEND_MODE       = 10010000b ; Настройка: 1 0 0 A СH 0 B CL   1=ввод 0=вывод
0013   8C02             RECV_MODE       = 10011001b
0014   8C02             
0015   8C02             ERR_START   	= 040h
0016   8C02             ERR_WAIT    	= 041h
0017   8C02             ERR_OK_NEXT 	= 042h
0018   8C02             ERR_OK        = 043h
0019   8C02             ERR_OK_READ   = 044h
0020   8C02             ERR_OK_ENTRY  = 045h
0021   8C02             ERR_OK_WRITE	= 046h
0022   8C02             ERR_OK_RKS  	= 047h
0023   8C02             
0024   8C02             VER_BUF = 0
0025   8C02             
0026   8C02             ;----------------------------------------------------------------------------
0027   8C02             ; Заголовок RKS файла
0028   8C02             
0029   8C02 06 8C            .dw $+4
0030   8C04 FF 8E            .dw End-1
0031   8C06                  
0032   8C06             ;----------------------------------------------------------------------------
0033   8C06             	      
0034   8C06             Entry:
0035   8C06                  ; Желтый цвет
0036   8C06 3E 80            MVI	A, 80h
0037   8C08 32 FE FF         STA	0FFFEh
0038   8C0B             
0039   8C0B                  ; Рисуем изображение
0040   8C0B 21 68 8C         LXI	H, Img
0041   8C0E 11 1C BE         LXI	D, 0BE1Ch
0042   8C11             DrawImg2:
0043   8C11 4E               MOV	C, M
0044   8C12 0D               DCR	C
0045   8C13 CA 22 8C         JZ 	DrawImg4
0046   8C16 23               INX	H
0047   8C17 7E               MOV	A, M
0048   8C18 23               INX	H
0049   8C19             DrawImg3:
0050   8C19 12               STAX	D
0051   8C1A 1B               DCX	D
0052   8C1B 0D               DCR	C
0053   8C1C C2 19 8C         JNZ	DrawImg3
0054   8C1F C3 11 8C         JMP	DrawImg2
0055   8C22             DrawImg4:
0056   8C22                 
0057   8C22                  ; Белый цвет
0058   8C22 AF               XRA	A
0059   8C23 32 FE FF         STA	0FFFEh
0060   8C26             
0061   8C26                  ; Вывод названия контроллера на экран
0062   8C26 21 93 8C         LXI	H, aHello
0063   8C29 CD 18 C8         CALL	0C818h
0064   8C2C             
0065   8C2C                  ; Вывод версии контроллера
0066   8C2C CD 4D 8C         CALL	PrintVer
0067   8C2F             
0068   8C2F                  ; Перевод строки
0069   8C2F 21 B1 8C         lxi	h, aCrLf
0070   8C32 CD 18 C8         CALL	0C818h
0071   8C35             
0072   8C35                  ; Запускаем файл SHELL.RKS без ком строки
0073   8C35 21 C3 8C         LXI	H, aShellRks
0074   8C38 11 F1 8C         LXI	D, aEmpty
0075   8C3B CD DA 8D         CALL	CmdExec
0076   8C3E F5               PUSH	PSW
0077   8C3F             
0078   8C3F                  ; Ошибка - файл не найден
0079   8C3F FE 04            CPI	04h
0080   8C41 C2 FF 8C         JNZ 	Error2
0081   8C44             
0082   8C44                  ; Вывод сообщения "ФАЙЛ НЕ НАЙДЕН BOOT/SHELL.RKS"
0083   8C44 21 B4 8C         LXI	H, aErrorShellRks
0084   8C47 CD 18 C8         CALL	0C818h
0085   8C4A C3 4A 8C         JMP	$
0086   8C4D             
0087   8C4D             ;----------------------------------------------------------------------------
0088   8C4D             
0089   8C4D             PrintVer:
0090   8C4D                  ; Команда получения версии
0091   8C4D 3E 01            MVI	A, 1
0092   8C4F CD 2A 8E         CALL	StartCommand	; Лишний такт в котором пропустим версию
0093   8C52 CD 99 8E         CALL	SwitchRecv
0094   8C55                  
0095   8C55                  ; Получаем версию набора команд и текст
0096   8C55 01 00 00         LXI	B, VER_BUF
0097   8C58 11 12 00         LXI	D, 18          ; 1 ый байт версия, последний байт - отпускаем шину
0098   8C5B CD AB 8E         CALL	RecvBlock
0099   8C5E                       
0100   8C5E                  ; Вывод версии железа
0101   8C5E AF               XRA	A
0102   8C5F 32 11 00         STA	VER_BUF+17
0103   8C62 21 01 00         LXI	H, VER_BUF+1
0104   8C65 C3 18 C8         JMP 	0C818h
0105   8C68             
0106   8C68             ;----------------------------------------------------------------------------
0107   8C68             
0108   8C68 08 FF 02 1F Img:            .db 8, 0FFh, 2, 01Fh, 4, 06Fh, 2, 01Fh, 7, 0FFh, 5, 055h, 2, 0FFh, 234, 0
0108   8C6C 04 6F 02 1F 
0108   8C70 07 FF 05 55 
0108   8C74 02 FF EA 00 
0109   8C78 08 FF 02 E3                 .db 8, 0FFh, 2, 0E3h, 2, 0FDh, 2, 0F3h, 2, 0EFh, 2, 0F1h, 5, 0FFh, 3, 07Fh, 3, 055h, 3, 0D5h, 2, 07Fh, 234, 0
0109   8C7C 02 FD 02 F3 
0109   8C80 02 EF 02 F1 
0109   8C84 05 FF 03 7F 
0109   8C88 03 55 03 D5 
0109   8C8C 02 7F EA 00 
0110   8C90 16 01                       .db 22, 1
0111   8C92 01                          .db 1
0112   8C93             
0113   8C93 0D 53 44 20 aHello:         .db 13,"SD BIOS V1.0",13,10
0113   8C97 42 49 4F 53 
0113   8C9B 20 56 31 2E 
0113   8C9F 30 0D 0A 
0114   8CA2 53 44 20 43 aSdController:  .db "SD CONTROLLER ",0
0114   8CA6 4F 4E 54 52 
0114   8CAA 4F 4C 4C 45 
0114   8CAE 52 20 00 
0115   8CB1 0D 0A 00    aCrLf:          .db 13,10,0
0116   8CB4 66 61 6A 6C aErrorShellRks: .db "fajl ne najden "
0116   8CB8 20 6E 65 20 
0116   8CBC 6E 61 6A 64 
0116   8CC0 65 6E 20 
0117   8CC3 42 4F 4F 54 aShellRks:      .db "BOOT/SHELL.RKS",0
0117   8CC7 2F 53 48 45 
0117   8CCB 4C 4C 2E 52 
0117   8CCF 4B 53 00 
0118   8CD2 28 63 29 20                 .db "(c) 22-05-2013 vinxru"
0118   8CD6 32 32 2D 30 
0118   8CDA 35 2D 32 30 
0118   8CDE 31 33 20 76 
0118   8CE2 69 6E 78 72 
0118   8CE6 75 
0119   8CE7             
0120   8CE7             ; Код ниже будет затерт ком строкой и собственым именем
0121   8CE7             
0122   8CE7             SELF_NAME    = $-512 ; путь (буфер 256 байт)
0123   8CE7             CMD_LINE     = $-256 ; команданая строка 256 байт
0124   8CE7             
0125   8CE7             ;----------------------------------------------------------------------------
0126   8CE7             ; РЕЗИДЕНТНАЯ ЧАСТЬ SD BIOS
0127   8CE7             ;----------------------------------------------------------------------------
0128   8CE7             
0129   8CE7 6F 7B 69 62 aError:    .db "o{ibka SD "
0129   8CEB 6B 61 20 53 
0129   8CEF 44 20 
0130   8CF1 00          aEmpty:    .db 0
0131   8CF2             
0132   8CF2             ;----------------------------------------------------------------------------
0133   8CF2             ; Тут восстанавливается то, что можно быть испорчено при сбое
0134   8CF2             
0135   8CF2             Error:     
0136   8CF2                  ; Схема начального запуска
0137   8CF2 FB               EI
0138   8CF3 21 03 FF         LXI	H, 0FF03h
0139   8CF6 36 82            MVI	M, 82h
0140   8CF8                  
0141   8CF8                  ; Инициализация стека
0142   8CF8 31 FF 7F         LXI	SP, 07FFFh
0143   8CFB             
0144   8CFB                  ; Сохраняем код ошибки
0145   8CFB F5               PUSH	PSW
0146   8CFC             
0147   8CFC                  ; Очистка экрана, переменные BIOS могут быть испорчены
0148   8CFC CD 19 8E         CALL	BiosInit
0149   8CFF                  
0150   8CFF             Error2:
0151   8CFF                  ; Вывод текста "ОШИБКА SD "
0152   8CFF 21 E7 8C         LXI	H, aError
0153   8D02 CD 18 C8         CALL	0C818h
0154   8D05             
0155   8D05                  ; Вывод кода ошибки
0156   8D05 F1               POP	PSW
0157   8D06 CD 15 C8         CALL	0C815h
0158   8D09             
0159   8D09                  ; Виснем
0160   8D09 C3 09 8D         JMP	$
0161   8D0C             
0162   8D0C             ;----------------------------------------------------------------------------
0163   8D0C             
0164   8D0C             BiosEntry:
0165   8D0C E5               PUSH H             ; 1
0166   8D0D 21 15 8D         LXI	H, JmpTbl     ; 2
0167   8D10 85               ADD	L             ; 1
0168   8D11 6F               MOV	L, A          ; 1
0169   8D12 6E               MOV	L, M          ; 1
0170   8D13 E3               XTHL               ; 1
0171   8D14 C9               RET                ; 1
0172   8D15             
0173   8D15             ;----------------------------------------------------------------------------
0174   8D15             ; Страница 8D00. Все переходы JmpTbl в пределах одной страницы
0175   8D15             
0176   8D15             JmpTbl:
0177   8D15 DA               .db CmdExec           ; 0 HL-имя файла, DE-командная строка  / A-код ошибки
0178   8D16 1C               .db CmdFind           ; 1 HL-имя файла, DE-максимум файлов для загрузки, BC-адрес / HL-сколько загрузили, A-код ошибки
0179   8D17 45               .db CmdOpenDelete     ; 2 D-режим, HL-имя файла / A-код ошибки
0180   8D18 5C               .db CmdSeekGetSize    ; 3 B-режим, DE:HL-позиция / A-код ошибки, DE:HL-позиция
0181   8D19 7E               .db CmdRead           ; 4 HL-размер, DE-адрес / HL-сколько загрузили, A-код ошибки
0182   8D1A 8E               .db CmdWrite          ; 5 HL-размер, DE-адрес / A-код ошибки
0183   8D1B B8               .db CmdMove           ; 6 HL-из, DE-в / A-код ошибки
0184   8D1C             
0185   8D1C             ;----------------------------------------------------------------------------
0186   8D1C             ; HL-путь, DE-максимум файлов для загрузки, BC-адрес / HL-сколько загрузили, A-код ошибки
0187   8D1C             
0188   8D1C             CmdFind:
0189   8D1C                  ; Код команды
0190   8D1C 3E 03            MVI	A, 3
0191   8D1E CD 2A 8E         CALL	StartCommand
0192   8D21             
0193   8D21                  ; Путь
0194   8D21 CD 8D 8E         CALL	SendString
0195   8D24             
0196   8D24                  ; Максимум файлов
0197   8D24 EB               XCHG
0198   8D25 CD 85 8E         CALL	SendWord
0199   8D28             
0200   8D28                  ; Переключаемся в режим приема
0201   8D28 CD 99 8E         CALL	SwitchRecv
0202   8D2B             
0203   8D2B                  ; Счетчик
0204   8D2B 21 00 00         LXI	H, 0
0205   8D2E             
0206   8D2E             CmdFindLoop:
0207   8D2E                  ; Ждем пока МК прочитает
0208   8D2E CD A2 8E         CALL	WaitForReady
0209   8D31 FE 43            CPI	ERR_OK
0210   8D33 CA 75 8E         JZ		Ret0
0211   8D36 FE 45            CPI	ERR_OK_ENTRY
0212   8D38 C2 76 8E         JNZ	EndCommand
0213   8D3B             
0214   8D3B                  ; Прием блока данных
0215   8D3B 11 14 00         LXI	D, 20	; Длина блока
0216   8D3E CD AB 8E         CALL	RecvBlock
0217   8D41             
0218   8D41                  ; Увеличиваем счетчик файлов
0219   8D41 23               INX	H
0220   8D42             
0221   8D42                  ; Цикл
0222   8D42 C3 2E 8D         JMP	CmdFindLoop
0223   8D45             
0224   8D45             ;----------------------------------------------------------------------------
0225   8D45             ; D-режим, HL-имя файла / A-код ошибки
0226   8D45             
0227   8D45             CmdOpenDelete: 
0228   8D45                  ; Код команды
0229   8D45 3E 04            MVI	A, 4
0230   8D47 CD 2A 8E         CALL	StartCommand
0231   8D4A             
0232   8D4A                  ; Режим
0233   8D4A 7A               MOV	A, D
0234   8D4B CD F0 8E         CALL	Send
0235   8D4E             
0236   8D4E                  ; Имя файла
0237   8D4E CD 8D 8E         CALL	SendString
0238   8D51             
0239   8D51                  ; Ждем пока МК сообразит
0240   8D51 CD 9F 8E         CALL	SwitchRecvAndWait
0241   8D54 FE 43            CPI	ERR_OK
0242   8D56 CA 75 8E         JZ		Ret0
0243   8D59 C3 76 8E         JMP	EndCommand
0244   8D5C                  
0245   8D5C             ;----------------------------------------------------------------------------
0246   8D5C             ; B-режим, DE:HL-позиция / A-код ошибки, DE:HL-позиция
0247   8D5C             
0248   8D5C             CmdSeekGetSize:
0249   8D5C                  ; Код команды
0250   8D5C 3E 05            MVI 	A, 5
0251   8D5E CD 2A 8E         CALL	StartCommand
0252   8D61             
0253   8D61                  ; Режим     
0254   8D61 78               MOV	A, B
0255   8D62 CD F0 8E         CALL	Send
0256   8D65             
0257   8D65                  ; Позиция     
0258   8D65 CD 85 8E         CALL	SendWord
0259   8D68 EB               XCHG
0260   8D69 CD 85 8E         CALL	SendWord
0261   8D6C             
0262   8D6C                  ; Ждем пока МК сообразит. МК должен ответить кодом ERR_OK
0263   8D6C CD 9F 8E         CALL	SwitchRecvAndWait
0264   8D6F FE 43            CPI	ERR_OK
0265   8D71 C2 76 8E         JNZ	EndCommand
0266   8D74             
0267   8D74                  ; Длина файла
0268   8D74 CD 7C 8E         CALL	RecvWord
0269   8D77 EB               XCHG
0270   8D78 CD 7C 8E         CALL	RecvWord
0271   8D7B             
0272   8D7B                  ; Результат
0273   8D7B C3 75 8E         JMP	Ret0
0274   8D7E                  
0275   8D7E             ;----------------------------------------------------------------------------
0276   8D7E             ; HL-размер, DE-адрес / HL-сколько загрузили, A-код ошибки
0277   8D7E             
0278   8D7E             CmdRead:
0279   8D7E                  ; Код команды
0280   8D7E 3E 06            MVI	A, 6
0281   8D80 CD 2A 8E         CALL	StartCommand
0282   8D83             
0283   8D83                  ; Адрес в BC
0284   8D83 42               MOV	B, D
0285   8D84 4B               MOV	C, E
0286   8D85             
0287   8D85                  ; Размер блока
0288   8D85 CD 85 8E         CALL	SendWord        ; HL-размер
0289   8D88             
0290   8D88                  ; Переключаемся в режим приема
0291   8D88 CD 99 8E         CALL	SwitchRecv
0292   8D8B             
0293   8D8B                  ; Прием блока. На входе адрес BC, принятая длина в HL
0294   8D8B C3 C8 8E         JMP	RecvBuf
0295   8D8E             
0296   8D8E             ;----------------------------------------------------------------------------
0297   8D8E             ; HL-размер, DE-адрес / A-код ошибки
0298   8D8E             
0299   8D8E             CmdWrite:
0300   8D8E                  ; Код команды
0301   8D8E 3E 07            MVI	A, 7
0302   8D90 CD 2A 8E         CALL	StartCommand
0303   8D93                  
0304   8D93                  ; Размер блока
0305   8D93 CD 85 8E         CALL	SendWord        ; HL-размер
0306   8D96             
0307   8D96                  ; Теперь адрес в HL
0308   8D96 EB               XCHG
0309   8D97             
0310   8D97             CmdWriteFile2:
0311   8D97                  ; Результат выполнения команды
0312   8D97 CD 9F 8E         CALL	SwitchRecvAndWait
0313   8D9A FE 43            CPI  	ERR_OK
0314   8D9C CA 75 8E         JZ  	Ret0
0315   8D9F FE 46            CPI  	ERR_OK_WRITE
0316   8DA1 C2 76 8E         JNZ	EndCommand
0317   8DA4             
0318   8DA4                  ; Размер блока, который может принять МК в DE
0319   8DA4 CD 7C 8E         CALL	RecvWord
0320   8DA7             
0321   8DA7                  ; Переключаемся в режим передачи    
0322   8DA7 CD 6C 8E         CALL	SwitchSend
0323   8DAA             
0324   8DAA                  ; Передача блока. Адрес BC длина DE. (Можно оптимизировать цикл)
0325   8DAA             CmdWriteFile1:
0326   8DAA 7E               MOV	A, M
0327   8DAB 23               INX	H
0328   8DAC CD F0 8E         CALL	Send
0329   8DAF 1B               DCX	D
0330   8DB0 7A               MOV	A, D
0331   8DB1 B3               ORA	E
0332   8DB2 C2 AA 8D         JNZ 	CmdWriteFile1
0333   8DB5             
0334   8DB5 C3 97 8D         JMP	CmdWriteFile2
0335   8DB8             
0336   8DB8             ;----------------------------------------------------------------------------
0337   8DB8             ; HL-из, DE-в / A-код ошибки
0338   8DB8             
0339   8DB8             CmdMove:     
0340   8DB8                  ; Код команды
0341   8DB8 3E 08            MVI	A, 8
0342   8DBA CD 2A 8E         CALL	StartCommand
0343   8DBD             
0344   8DBD                  ; Имя файла
0345   8DBD CD 8D 8E         CALL	SendString
0346   8DC0             
0347   8DC0                  ; Ждем пока МК сообразит
0348   8DC0 CD 9F 8E         CALL	SwitchRecvAndWait
0349   8DC3 FE 46            CPI	ERR_OK_WRITE
0350   8DC5 C2 76 8E         JNZ	EndCommand
0351   8DC8             
0352   8DC8                  ; Переключаемся в режим передачи
0353   8DC8 CD 6C 8E         CALL	SwitchSend
0354   8DCB             
0355   8DCB                  ; Имя файла
0356   8DCB EB               XCHG
0357   8DCC CD 8D 8E         CALL	SendString
0358   8DCF             
0359   8DCF             WaitEnd:
0360   8DCF                  ; Ждем пока МК сообразит
0361   8DCF CD 9F 8E         CALL	SwitchRecvAndWait
0362   8DD2 FE 43            CPI	ERR_OK
0363   8DD4 CA 75 8E         JZ		Ret0
0364   8DD7 C3 76 8E         JMP	EndCommand
0365   8DDA             
0366   8DDA             ;----------------------------------------------------------------------------
0367   8DDA             ; HL-имя файла, DE-командная строка / A-код ошибки
0368   8DDA             
0369   8DDA             CmdExec:
0370   8DDA                  ; Код команды
0371   8DDA 3E 02            MVI	A, 2
0372   8DDC CD 2A 8E         CALL	StartCommand
0373   8DDF             
0374   8DDF                  ; Имя файла
0375   8DDF E5               PUSH	H
0376   8DE0 CD 8D 8E         CALL	SendString
0377   8DE3 E1               POP	H
0378   8DE4             
0379   8DE4                  ; Ждем пока МК прочитает файл
0380   8DE4                  ; МК должен ответить кодом ERR_OK_RKS
0381   8DE4 CD 9F 8E         CALL	SwitchRecvAndWait
0382   8DE7 FE 47            CPI	ERR_OK_RKS
0383   8DE9 C2 76 8E         JNZ	EndCommand
0384   8DEC             
0385   8DEC                  ; Сохраняем имя файла (HL-строка)
0386   8DEC D5               PUSH	D
0387   8DED EB               XCHG
0388   8DEE 21 E7 8A         LXI	H, SELF_NAME
0389   8DF1 CD E1 8E         CALL	strcpy255
0390   8DF4 D1               POP	D
0391   8DF5             
0392   8DF5                  ; Сохраняем командную строку (DE-строка)
0393   8DF5 21 E7 8B         LXI	H, CMD_LINE
0394   8DF8 CD E1 8E         CALL	strcpy255
0395   8DFB             
0396   8DFB                  ; *** Это точка невозврата. Любая ошибка приведет к перезагрузке. ***
0397   8DFB             
0398   8DFB                  ; Инициализация стека (аналогично стандартному монитору
0399   8DFB 31 FF 7F         LXI	SP, 07FFFh
0400   8DFE             
0401   8DFE                  ; Принимаем адрес загрузки в BC и сохраняем его в стек
0402   8DFE CD 7C 8E         CALL	RecvWord
0403   8E01 D5               PUSH	D
0404   8E02 42               MOV 	B, D
0405   8E03 4B               MOV 	C, E
0406   8E04             
0407   8E04                  ; Загружаем файл
0408   8E04 CD C8 8E         CALL	RecvBuf
0409   8E07 C2 F2 8C         JNZ 	Error
0410   8E0A             
0411   8E0A                  ; Инициализация переменных BIOS и очистка экрана
0412   8E0A CD 19 8E         CALL	BiosInit
0413   8E0D             
0414   8E0D                  ; Настройки для программы
0415   8E0D 3E 01            MVI  A, 1					; Версия контроллера
0416   8E0F 01 0C 8D         LXI  B, BiosEntry  ; Точка входа SD BIOS
0417   8E12 11 E7 8A         LXI  D, SELF_NAME  ; Собственное имя
0418   8E15 21 E7 8B         LXI  H, CMD_LINE   ; Командная строка
0419   8E18             
0420   8E18                  ; Запуск загруженной программы
0421   8E18 C9               RET
0422   8E19             
0423   8E19             ;----------------------------------------------------------------------------
0424   8E19             ; Это была последняя команда. Дальше страница 8E00.
0425   8E19             ;----------------------------------------------------------------------------
0426   8E19             
0427   8E19             ;----------------------------------------------------------------------------
0428   8E19             ; Инициализация переменные BIOS и очистка экрана
0429   8E19             
0430   8E19             BiosInit:
0431   8E19                  ; Какие то системные переменные
0432   8E19 21 73 C4         LXI	H, 0C473h
0433   8E1C 11 94 C4         LXI	D, 0C494h
0434   8E1F 01 DF 8F         LXI	B, 08FDFh
0435   8E22 CD 2D C4         CALL	0C42Dh
0436   8E25             
0437   8E25                  ; Очистка экрана
0438   8E25 0E 1F            MVI	C, 1Fh
0439   8E27 C3 09 C8         JMP 	0C809h
0440   8E2A             
0441   8E2A             ;----------------------------------------------------------------------------
0442   8E2A             ; Начало любой команды. 
0443   8E2A             ; B - код команды
0444   8E2A             
0445   8E2A             StartCommand:
0446   8E2A                  ; Первым этапом происходит синхронизация с контроллером
0447   8E2A                  ; Принимается 256 попыток, в каждой из которых пропускается 256+ байт
0448   8E2A                  ; То есть это максимальное кол-во данных, которое может передать контроллер
0449   8E2A C5               PUSH	B
0450   8E2B 47               MOV	B, A
0451   8E2C 0E 00            MVI	C, 0
0452   8E2E             
0453   8E2E             StartCommand1:
0454   8E2E                  ; Режим передачи
0455   8E2E CD 6F 8E         CALL	SwitchSend0
0456   8E31             
0457   8E31                  ; Передаем начало команды
0458   8E31 3E 13            MVI	A, 013h
0459   8E33 CD F0 8E         CALL	Send
0460   8E36 3E B4            MVI	A, 0B4h
0461   8E38 CD F0 8E         CALL	Send
0462   8E3B 3E 57            MVI	A, 057h
0463   8E3D CD F0 8E         CALL	Send
0464   8E40 78               MOV	A, B
0465   8E41 CD F0 8E         CALL	Send
0466   8E44             
0467   8E44                  ; Режим приема  
0468   8E44 CD 99 8E         CALL	SwitchRecv
0469   8E47             
0470   8E47                  ; Если есть синхронизация, то контроллер ответит ERR_START
0471   8E47 CD F3 8E         CALL	Recv
0472   8E4A FE 40            CPI	ERR_START
0473   8E4C CA 63 8E         JZ		StartCommand2
0474   8E4F             
0475   8E4F                  ; Пауза. И за одно пропускаем 256 байт (в сумме будет 
0476   8E4F                  ; пропущено 64 Кб данных, максимальный размер пакета)
0477   8E4F C5               PUSH	B
0478   8E50 0E 00            MVI	C, 0
0479   8E52             StartCommand3:
0480   8E52 CD F3 8E         CALL	Recv
0481   8E55 0D               DCR	C
0482   8E56 C2 52 8E         JNZ	StartCommand3
0483   8E59 C1               POP	B
0484   8E5A                     
0485   8E5A                  ; Попытки
0486   8E5A 0D               DCR	C
0487   8E5B C2 2E 8E         JNZ	StartCommand1    
0488   8E5E             
0489   8E5E                  ; Код ошибки
0490   8E5E 3E 40            MVI	A, ERR_START
0491   8E60 C1               POP	B ; Прошлое значение B
0492   8E61             
0493   8E61                  ; Выходим через функцию.
0494   8E61             StartCommandErr:
0495   8E61 C1               POP	B ; Адрес возрата
0496   8E62 C9               RET
0497   8E63             
0498   8E63             ;----------------------------------------------------------------------------
0499   8E63             ; Синхронизация с контроллером есть. Контроллер должен ответить ERR_OK_NEXT
0500   8E63             
0501   8E63             StartCommand2:
0502   8E63                  ; Восстанавливаем прошлое значение BC
0503   8E63 C1               POP	B
0504   8E64             
0505   8E64                  ; Ответ         	
0506   8E64 CD A2 8E         CALL	WaitForReady
0507   8E67 FE 42            CPI	ERR_OK_NEXT
0508   8E69 C2 61 8E         JNZ	StartCommandErr
0509   8E6C             
0510   8E6C                  ; Включаем передачу и выходим
0511   8E6C                  ;JMP 	SwitchSend
0512   8E6C             
0513   8E6C             ;----------------------------------------------------------------------------
0514   8E6C             ; Переключиться в режим передачи
0515   8E6C             
0516   8E6C             SwitchSend:
0517   8E6C CD F3 8E         CALL	Recv
0518   8E6F             SwitchSend0:
0519   8E6F 3E 90            MVI	A, SEND_MODE
0520   8E71 32 03 F0         STA	CTL_PORT
0521   8E74 C9               RET
0522   8E75             
0523   8E75             ;----------------------------------------------------------------------------
0524   8E75             ; Успешное окончание команды 
0525   8E75             ; и дополнительный такт, что бы МК отпустил шину
0526   8E75             
0527   8E75             Ret0:
0528   8E75 AF               XRA	A
0529   8E76             
0530   8E76             ;----------------------------------------------------------------------------
0531   8E76             ; Окончание команды с ошибкой в A 
0532   8E76             ; и дополнительный такт, что бы МК отпустил шину
0533   8E76             
0534   8E76             EndCommand:
0535   8E76 F5               PUSH	PSW
0536   8E77 CD F3 8E         CALL	Recv
0537   8E7A F1               POP	PSW
0538   8E7B C9               RET
0539   8E7C             
0540   8E7C             ;----------------------------------------------------------------------------
0541   8E7C             ; Принять слово в DE 
0542   8E7C             ; Портим A.
0543   8E7C             
0544   8E7C             RecvWord:
0545   8E7C CD F3 8E        CALL Recv
0546   8E7F 5F              MOV  E, A
0547   8E80 CD F3 8E        CALL Recv
0548   8E83 57              MOV  D, A
0549   8E84 C9              RET
0550   8E85                 
0551   8E85             ;----------------------------------------------------------------------------
0552   8E85             ; Отправить слово из HL 
0553   8E85             ; Портим A.
0554   8E85             
0555   8E85             SendWord:
0556   8E85 7D              MOV		A, L
0557   8E86 CD F0 8E        CALL	Send
0558   8E89 7C              MOV		A, H
0559   8E8A C3 F0 8E        JMP		Send
0560   8E8D                 
0561   8E8D             ;----------------------------------------------------------------------------
0562   8E8D             ; Отправка строки
0563   8E8D             ; HL - строка
0564   8E8D             ; Портим A.
0565   8E8D             
0566   8E8D             SendString:
0567   8E8D AF               XRA	A
0568   8E8E B6               ORA	M
0569   8E8F CA F0 8E         JZ		Send
0570   8E92 CD F0 8E         CALL	Send
0571   8E95 23               INX	H
0572   8E96 C3 8D 8E         JMP	SendString
0573   8E99                  
0574   8E99             ;----------------------------------------------------------------------------
0575   8E99             ; Переключиться в режим приема
0576   8E99             
0577   8E99             SwitchRecv:
0578   8E99 3E 99            MVI	A, RECV_MODE
0579   8E9B 32 03 F0         STA	CTL_PORT
0580   8E9E C9               RET
0581   8E9F             
0582   8E9F             ;----------------------------------------------------------------------------
0583   8E9F             ; Переключиться в режим передами и ожидание готовности МК.
0584   8E9F             
0585   8E9F             SwitchRecvAndWait:
0586   8E9F CD 99 8E         CALL SwitchRecv
0587   8EA2             
0588   8EA2             ;----------------------------------------------------------------------------
0589   8EA2             ; Ожидание готовности МК.
0590   8EA2             
0591   8EA2             WaitForReady:
0592   8EA2 CD F3 8E         CALL	Recv
0593   8EA5 FE 41            CPI	ERR_WAIT
0594   8EA7 CA A2 8E         JZ		WaitForReady
0595   8EAA C9               RET
0596   8EAB             
0597   8EAB             ;----------------------------------------------------------------------------
0598   8EAB             ; Принять DE байт по адресу BC
0599   8EAB             ; Портим A
0600   8EAB             
0601   8EAB             RecvBlock:
0602   8EAB E5               PUSH	H
0603   8EAC 21 01 F0         LXI 	H, CLC_PORT
0604   8EAF 14               INR 	D
0605   8EB0 AF               XRA 	A
0606   8EB1 B3               ORA 	E
0607   8EB2 CA C2 8E         JZ 	RecvBlock2
0608   8EB5             RecvBlock1:
0609   8EB5 36 80            MVI  M, CLC_BIT  ; 7
0610   8EB7 36 00            MVI  M, 0        ; 7
0611   8EB9 3A 02 F0         LDA	DATA_PORT   ; 13
0612   8EBC 02               STAX	B		        ; 7
0613   8EBD 03               INX	B		        ; 5
0614   8EBE 1D               DCR	E		        ; 5
0615   8EBF C2 B5 8E         JNZ	RecvBlock1	; 10 = 54
0616   8EC2             RecvBlock2:
0617   8EC2 15               DCR	D
0618   8EC3 C2 B5 8E         JNZ	RecvBlock1
0619   8EC6 E1               POP	H
0620   8EC7 C9               RET
0621   8EC8             
0622   8EC8             ;----------------------------------------------------------------------------
0623   8EC8             ; Загрузка данных по адресу BC. 
0624   8EC8             ; На выходе HL сколько загрузили
0625   8EC8             ; Портим A
0626   8EC8             ; Если загружено без ошибок, на выходе Z=1
0627   8EC8             
0628   8EC8             RecvBuf:
0629   8EC8 21 00 00         LXI	H, 0
0630   8ECB             RecvBuf0:   
0631   8ECB                  ; Подождать
0632   8ECB CD A2 8E         CALL	WaitForReady
0633   8ECE FE 44            CPI	ERR_OK_READ
0634   8ED0 CA 75 8E         JZ		Ret0		; на выходе Z (нет ошибки)
0635   8ED3 B7               ORA	A
0636   8ED4 C2 76 8E         JNZ	EndCommand	; на выходе NZ (ошибка)
0637   8ED7             
0638   8ED7                  ; Размер загруженных данных в DE
0639   8ED7 CD 7C 8E         CALL	RecvWord
0640   8EDA             
0641   8EDA                  ; В HL общий размер
0642   8EDA 19               DAD D
0643   8EDB             
0644   8EDB                  ; Принять DE байт по адресу BC
0645   8EDB CD AB 8E         CALL	RecvBlock
0646   8EDE             
0647   8EDE C3 CB 8E         JMP	RecvBuf0
0648   8EE1             
0649   8EE1             ;----------------------------------------------------------------------------
0650   8EE1             ; Скопироваьт строку с ограничением 256 символов (включая терминатор)
0651   8EE1             
0652   8EE1             strcpy255:
0653   8EE1 06 FF            MVI  B, 255
0654   8EE3             strcpy255_1:
0655   8EE3 1A               LDAX D
0656   8EE4 13               INX  D
0657   8EE5 77               MOV  M, A
0658   8EE6 23               INX  H
0659   8EE7 B7               ORA  A
0660   8EE8 C8               RZ
0661   8EE9 05               DCR  B
0662   8EEA C2 E3 8E         JNZ  strcpy255_1
0663   8EED 36 00            MVI  M, 0 ; Терминатор
0664   8EEF C9               RET
0665   8EF0             
0666   8EF0             ;----------------------------------------------------------------------------
0667   8EF0             ; Отправить байт из A.
0668   8EF0             
0669   8EF0             Send:
0670   8EF0 32 02 F0         STA	DATA_PORT     
0671   8EF3             
0672   8EF3             ;----------------------------------------------------------------------------
0673   8EF3             ; Принять байт в А
0674   8EF3             
0675   8EF3             Recv:
0676   8EF3 3E 80            MVI	A, CLC_BIT
0677   8EF5 32 01 F0         STA	CLC_PORT
0678   8EF8 AF               XRA	A
0679   8EF9 32 01 F0         STA	CLC_PORT
0680   8EFC 3A 02 F0         LDA	DATA_PORT
0681   8EFF C9               RET
0682   8F00             
0683   8F00             ;----------------------------------------------------------------------------
0684   8F00             
0685   8F00             End:
0686   8F00 FF FF            .dw 0FFFFh
0687   8F02             
0688   8F02             ;----------------------------------------------------------------------------
0689   8F02             
0690   8F02             .Endtasm: Number of errors = 0
